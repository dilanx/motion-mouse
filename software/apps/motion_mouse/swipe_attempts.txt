// static int8_t check_swipe_direction(ir_measurement_t measurement) {
//   // calculate change between this frame and last frame

//   int8_t total_motion[8] = {0};
//   uint8_t consecutive_frames = 0;
//   int8_t direction = 0;

//   for (uint8_t frame = 0; frame < 5; frame++) {
//     for (uint8_t row = 0; row < 8; row++) {
//       for (uint8_t col = 0; col < 8; col++) {
//         uint8_t index = row * 8 + col;
//         int8_t diff = measurement.pixels[index] - prev_ir_frames[frame].pixels[index];
//         total_motion[col] += diff;
//       }
//     }

//     bool motion_detected = false;
//     for (uint8_t col = 0; col < 8; col++) {
//       if (abs(total_motion[col]) > 5) {
//         motion_detected = true;
//         break;
//       }
//     }

//     if (motion_detected) {
//       consecutive_frames++;
//     } else {
//       consecutive_frames = 0;
//       for (uint8_t col = 0; col < 8; col++) {
//         total_motion[col] = 0;
//       }
//     }

//     if (consecutive_frames > 0) {
//       direction = total_motion[0] > 0 ? 1 : -1;
//       break;
//     }
//   }

//   for (uint8_t frame = 0; frame < 4; frame++) {
//     prev_ir_frames[frame] = prev_ir_frames[frame + 1];
//   }
//   prev_ir_frames[4] = measurement;

//   return direction;

// }

// static void update_ir_history(ir_measurement_t measurement) {
//   uint8_t count = 0;
//   for (uint8_t i = 0; i < 64; i++) {
//     if (measurement.pixels[i]) {
//       count++;
//     }
//   }

//   if (count < 10) {
//     return;
//   }


//   for (uint8_t frame = 0; frame < 4; frame++) {
//     prev_ir_frames[frame] = prev_ir_frames[frame + 1];
//   }
//   prev_ir_frames[4] = measurement;
// }

static int8_t check_swipe_direction() {
  for (uint8_t frame = 1; frame < 5; frame++) {
    uint8_t upwardCount = 0;
    uint8_t downwardCount = 0;

    for (uint8_t row = 0; row < 8; row++) {
      for (uint8_t col = 0; col < 8; col++) {
        uint8_t index = row * 8 + col;
        int8_t diff = prev_ir_frames[frame].pixels[index] - prev_ir_frames[frame - 1].pixels[index];
        if (diff > 0) {
          upwardCount++;
        } else if (diff < 0) {
          downwardCount++;
        }
      }
    }

    if (upwardCount > 10) {
      return 1;
    } else if (downwardCount > 10) {
      return -1;
    }
  }

  return 0;
}
